{
    "version": "https://jsonfeed.org/version/1",
    "title": "贤狼赫萝",
    "home_page_url": "https://heluo520.github.io/",
    "feed_url": "https://heluo520.github.io/feed.json",
    "description": "一只贤狼",
    "icon": "https://heluo520.github.io/kt2.jpg",
    "author": {
        "name": "贤狼赫萝",
        "url": "https://valaxy.site"
    },
    "items": [
        {
            "id": "",
            "content_html": "<h2>注解@ConfigurationProperties</h2>\n<ul>\n<li>\n<p>简介：可用于读取yml文件中定义的元数据并生成属性对象，一般用于生成配置对象。</p>\n</li>\n<li>\n<p>用法：</p>\n<p>配置对象</p>\n<pre><code class=\"language-java\">@</code></pre>\n</li>\n</ul>\n",
            "url": "https://heluo520.github.io/posts/springboot/annotation",
            "title": "SpringBoot中的注解",
            "date_modified": "2024-04-08T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>设置上传文件最大大小设置</h2>\n<pre><code class=\"language-yml\"># application.yml\nspring:\n  servlet:\n    multipart:\n      max-file-size: 10M</code></pre>\n",
            "url": "https://heluo520.github.io/posts/springboot/fileutils",
            "title": "web项目中的文件上传与下载",
            "date_modified": "2024-04-10T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<p>JWT（JSON Web Token）是一种开放标准（RFC 7519），它定义了一种紧凑且自包含的方式，用于在各方之间安全地传输信息作为 JSON 对象。JWT 可以通过数字签名进行验证，这样就可以确保在传输过程中的数据不被篡改。</p>\n",
            "url": "https://heluo520.github.io/posts/springboot/jwt",
            "title": "jwt的使用",
            "date_modified": "2024-04-09T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<p>笔记</p>\n",
            "url": "https://heluo520.github.io/posts/springboot/source-code",
            "title": "springboot源码学习",
            "date_modified": "2024-04-12T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<p>当数据库中表的字段名与我们java实体中的属性名不同时我们就需要手动指定映射关系，或进行一些配置。</p>\n",
            "url": "https://heluo520.github.io/posts/springboot/springboot-mybatis",
            "title": "springboot+mybatis中resultMap与驼峰命名",
            "date_modified": "2024-04-20T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<blockquote>\n<p>前言：在前后端分离开发的过程中，前端和后端需要进行api对接进行交互，就需要一个api规范文档，方便前后端的交互，但api文档不能根据代码的变化发生实时动态的改变，这样后端修改了接口，前端不能及时获取最新的接口，导致调用出错，需要手动维护api文档，加大了开发的工作量和困难，而swagger的出现就是为了解决这一系列的问题。</p>\n</blockquote>\n<p>简单来说的话就是一个基于openAPI构建的可用于动态生成后端接口文档的工具集</p>\n",
            "url": "https://heluo520.github.io/posts/springboot/swagger",
            "title": "SpringBoot中通过第三方Swagger-UI来使用Swagger",
            "date_modified": "2024-04-09T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>二者对比(其实作用都差不多)</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"><strong>Interceptor</strong></th>\n<th style=\"text-align:center\"><strong>Filter</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>技术范畴</strong></td>\n<td style=\"text-align:center\">Sprin</td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n",
            "url": "https://heluo520.github.io/posts/springboot/拦截器与过滤器",
            "title": "SpringBoot中的Interceptor(拦截器)与Filter(过滤器)",
            "date_modified": "2024-04-05T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>简介</h2>\n<p>RocketMQ为Alibaba开发的消息队列。优点：实现应用解耦、异步提速(响应速度)、削峰填谷(囤积消息慢慢处理)。缺点：可用性降低(如何保证中间件的可靠)、复杂性提高(耦合了中间件</p>\n",
            "url": "https://heluo520.github.io/posts/springcloud/rocketmq",
            "title": "RocketMQ",
            "date_modified": "2024-05-20T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>CAP概念</h2>\n<p>C: 一致性 、A：可用性 、P：分区容错性</p>\n<h2>Nacos与启动</h2>\n<p>Nacos：Eureka + Config + Bus 包含了注册中心、配置中心、动态刷新配置的功能，即是一个</p>\n",
            "url": "https://heluo520.github.io/posts/springcloud/springcloud-alibab",
            "title": "SpringCloud Alibab篇",
            "date_modified": "2024-05-17T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>架构</h2>\n<ul>\n<li>单体架构</li>\n<li>垂直架构</li>\n<li>分布式架构</li>\n<li>SOA架构</li>\n<li>微服务架构</li>\n</ul>\n<h2>注册中心</h2>\n<p>用于服务注册与服务发现。</p>\n<ul>\n<li>实现：\n<ol>\n<li>Eureka (Netflix)<br>\n2</li>\n</ol>\n</li>\n</ul>\n",
            "url": "https://heluo520.github.io/posts/springcloud/springcloud-eureka",
            "title": "SpringCloud Eureka篇",
            "date_modified": "2024-05-15T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<blockquote>\n<p>使用前提：Spring的AOP是基于JDK动态代理和CGlib代理实现的，所以目标对象必须要有父类或实现了接口才能被代理。</p>\n</blockquote>\n",
            "url": "https://heluo520.github.io/posts/ssm/index",
            "title": "Spring中的AOP",
            "date_modified": "2024-03-30T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<p>spring其实已经帮我们提供了整合Junit4的依赖，我们只需要导入Junit4的依赖就行。</p>\n",
            "url": "https://heluo520.github.io/posts/ssm/spring-junit",
            "title": "如何在Spring项目中使用Junit4?",
            "date_modified": "2024-03-30T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h1>没毛病兄弟们</h1>\n<p>内容....<br>\n<img src=\"./img/jk.jpg\" alt=\"漂亮的小姐姐\"></p>\n",
            "url": "https://heluo520.github.io/posts/ssm/test",
            "title": "测试",
            "date_modified": "2024-03-30T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<!--more-->\n<h2>Git命令(常用)</h2>\n<ul>\n<li>\n<p>git init</p>\n<p>初始化git仓库</p>\n</li>\n<li>\n<p>git remote add origin <a href=\"mailto:git@github.com\">git@github.com</a>:xxx/xxx.g</p>\n</li>\n</ul>\n",
            "url": "https://heluo520.github.io/posts/tools/git",
            "title": "Git命令",
            "date_modified": "2024-05-20T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>快捷键</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">快捷键</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">ctrl+alt+t</td>\n<td style=\"text-align:center\">将选中的代码放入一个语句块中</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ctrl+alt+m</td>\n<td style=\"text-align:center\">将选中的代码提取为一个方法</td>\n</tr>\n</tbody>\n</table>\n",
            "url": "https://heluo520.github.io/posts/tools/idea",
            "title": "IDEA快捷键",
            "date_modified": "2024-05-20T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2><code>&lt;optional&gt;</code>标签</h2>\n<p>情景：</p>\n<pre><code class=\"language-xml\">&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;arti</code></pre>\n",
            "url": "https://heluo520.github.io/posts/tools/maven",
            "title": "Maven使用",
            "date_modified": "2024-05-20T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>快捷键</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">快捷键</th>\n<th style=\"text-align:center\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">ctrl+win+d</td>\n<td style=\"text-align:center\">创建新的window桌面</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ctrl+win+左右键</td>\n<td style=\"text-align:center\">切换win桌面</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ct</td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n",
            "url": "https://heluo520.github.io/posts/tools/windows",
            "title": "windows快捷键",
            "date_modified": "2024-05-20T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.961Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<ul>\n<li></li>\n</ul>\n<h2>什么是设计模式？</h2>\n<p>设计模式是软件设计中常见问题的典型解决方案。(感觉都是为了使得设计的程序可扩展性好，不易出错，灵活高效)</p>\n<h1>根据意图/目的来分类</h1>\n<h2>创建型模式</h2>\n<p>提供创建对象的机制</p>\n",
            "url": "https://heluo520.github.io/posts/notes/design-pattern",
            "title": "设计模式",
            "date_modified": "2024-05-09T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.957Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>前言</h2>\n<p>基于Ubuntu的linux发行版</p>\n<h2>组成</h2>\n<ul>\n<li>内核</li>\n<li>shell(用户与内核交互的接口)</li>\n<li>文件系统</li>\n</ul>\n<h2>vim</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">命令</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n</table>\n",
            "url": "https://heluo520.github.io/posts/linux/linux",
            "title": "linux指令学习",
            "date_modified": "2024-05-26T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.953Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>在linux中wordpress的安装</h2>\n<h3>步骤一：更新系统</h3>\n<p>在终端中输入并执行命令：<code>sudo apt update &amp;&amp; sudo apt upgrade</code></p>\n<h3>步骤二：安装apa</h3>\n",
            "url": "https://heluo520.github.io/posts/linux/wordpress",
            "title": "在linux下安装配置wordpress",
            "date_modified": "2024-04-10T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.953Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>目录</h2>\n<ul>\n<li><a href=\"#%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95\">排序算法</a>\n<ol>\n<li><a href=\"#%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F\">快速排序</a></li>\n<li><a href=\"#%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F\">归并排序</a></li>\n<li><a href=\"#%E5%A0%86%E6%8E%92%E5%BA%8F\">堆排序</a></li>\n</ol>\n</li>\n</ul>\n<h2>排序算法</h2>\n<h4>快速</h4>\n",
            "url": "https://heluo520.github.io/posts/notes/algorithm",
            "title": "常用算法",
            "date_modified": "2024-05-12T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.953Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>目录</h2>\n<ul>\n<li><a href=\"#%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86\">基础部分</a>\n<ul>\n<li><a href=\"#oop\">面向对象(OOP)的特性</a></li>\n<li><a href=\"#%E8%99%9A%E5%87%BD%E6%95%B0%E4%B8%8E%E8%99%9A%E6%8C%87%E9%92%88\">虚函数与虚指针</a></li>\n<li><a href=\"#%E7%BA%AF%E8%99%9A%E5%87%BD%E6%95%B0\">纯虚函数</a></li>\n<li></li>\n</ul>\n</li>\n</ul>\n",
            "url": "https://heluo520.github.io/posts/notes/c-plus",
            "title": "C++",
            "date_modified": "2024-05-08T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.953Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<p>mybatis-plus是在mybatis的基础上只做增强而不做改变。所以我们可以同时使用两者，即有plus的方便性又有mybatis的灵活性。</p>\n",
            "url": "https://heluo520.github.io/posts/frame/mybatis-plus",
            "title": "springboot整合mybatis与mybatis-plus",
            "date_modified": "2024-04-12T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.941Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>NULL值的处理</h2>\n<ul>\n<li>使用函数<code>COALESCE(arg1,arg2,agr3,...)</code>。其接收多个参数，返回其中不为 null 的值，全为 null则返回 null。</li>\n<li>使用`IFNUL</li>\n</ul>\n",
            "url": "https://heluo520.github.io/posts/db/mysql",
            "title": "MySQL学习笔记",
            "date_modified": "2024-05-26T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.937Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>Redis启动(Windows下)</h2>\n<p>在 Redis 的安装目录下进入终端，输入<code>redis-server.exe redis.windows.conf</code>启动 Redis 服务端，另起一个终端进</p>\n",
            "url": "https://heluo520.github.io/posts/db/redis",
            "title": "Redis学习笔记",
            "date_modified": "2024-05-26T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.937Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<p>debug记录</p>\n",
            "url": "https://heluo520.github.io/posts/debug/bulid-bug",
            "title": "springboot在一个子模块B中引用另一个子模块C后编译B出错",
            "date_modified": "2024-04-11T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.937Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<p>使用@Slf4j打印对象时出现<code>java.lang.ClassNotFoundException: org.springframework.core.log.LogDelegateFactory</code>异常</p>\n",
            "url": "https://heluo520.github.io/posts/debug/slfj",
            "title": "使用@Slf4j打印对象出现java.lang.StackOverflowError",
            "date_modified": "2024-04-21T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.937Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>linux下记录DNS解析的文件</h2>\n<p>该文件的路径为<code>/etc/hosts</code>，使用<code>cat /etc/hosts</code>查看该文件内容如下：</p>\n<pre><code class=\"language-sh\">127.0.0.1\tlocalhost\n127.</code></pre>\n",
            "url": "https://heluo520.github.io/posts/docker/dns",
            "title": "DNS",
            "date_modified": "2024-06-03T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.937Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<p>本文内容包括在虚拟机上安装Docker以及在阿里云ECS上安装Docker</p>\n",
            "url": "https://heluo520.github.io/posts/docker/docker",
            "title": "Docker学习记录",
            "date_modified": "2024-06-04T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.937Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<p>在使用Docker部署多个项目的时候，我们可能会想要只对外暴露一个端口来访问我们服务器上的服务，那么我们就可以使用Nginx服务器来进行反向代理，而容器之间通过配置是可以进行相互访问通信的(不需要给</p>\n",
            "url": "https://heluo520.github.io/posts/docker/docker容器传输",
            "title": "Docker容器间的相互访问",
            "date_modified": "2024-06-05T00:00:00.000Z",
            "date_published": "2024-07-02T05:38:39.937Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        }
    ]
}