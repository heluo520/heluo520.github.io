{
    "version": "https://jsonfeed.org/version/1",
    "title": "贤狼赫萝",
    "home_page_url": "https://heluo520.github.io/",
    "feed_url": "https://heluo520.github.io/feed.json",
    "description": "一只贤狼",
    "icon": "https://heluo520.github.io/kt2.jpg",
    "author": {
        "name": "贤狼赫萝",
        "url": "https://valaxy.site"
    },
    "items": [
        {
            "id": "",
            "content_html": "<p>JWT（JSON Web Token）是一种开放标准（RFC 7519），它定义了一种紧凑且自包含的方式，用于在各方之间安全地传输信息作为 JSON 对象。JWT 可以通过数字签名进行验证，这样就可以确保在传输过程中的数据不被篡改。</p>\n",
            "url": "https://heluo520.github.io/posts/springboot/jwt",
            "title": "jwt的使用",
            "date_modified": "2024-04-09T00:00:00.000Z",
            "date_published": "2024-04-18T14:32:56.368Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<p>笔记</p>\n",
            "url": "https://heluo520.github.io/posts/springboot/source-code",
            "title": "springboot源码学习",
            "date_modified": "2024-04-12T00:00:00.000Z",
            "date_published": "2024-04-18T14:32:56.368Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<blockquote>\n<p>前言：在前后端分离开发的过程中，前端和后端需要进行api对接进行交互，就需要一个api规范文档，方便前后端的交互，但api文档不能根据代码的变化发生实时动态的改变，这样后端修改了接口，前端不能及时获取最新的接口，导致调用出错，需要手动维护api文档，加大了开发的工作量和困难，而swagger的出现就是为了解决这一系列的问题。</p>\n</blockquote>\n<p>简单来说的话就是一个基于openAPI构建的可用于动态生成后端接口文档的工具集</p>\n",
            "url": "https://heluo520.github.io/posts/springboot/swagger",
            "title": "SpringBoot中通过第三方Swagger-UI来使用Swagger",
            "date_modified": "2024-04-09T00:00:00.000Z",
            "date_published": "2024-04-18T14:32:56.368Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>二者对比(其实作用都差不多)</h2>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\"><strong>Interceptor</strong></th>\n<th style=\"text-align:center\"><strong>Filter</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><strong>技术范畴</strong></td>\n<td style=\"text-align:center\">Sprin</td>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n",
            "url": "https://heluo520.github.io/posts/springboot/拦截器与过滤器",
            "title": "SpringBoot中的Interceptor(拦截器)与Filter(过滤器)",
            "date_modified": "2024-04-05T00:00:00.000Z",
            "date_published": "2024-04-18T14:32:56.368Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<blockquote>\n<p>使用前提：Spring的AOP是基于JDK动态代理和CGlib代理实现的，所以目标对象必须要有父类或实现了接口才能被代理。</p>\n</blockquote>\n",
            "url": "https://heluo520.github.io/posts/ssm/index",
            "title": "Spring中的AOP",
            "date_modified": "2024-03-30T00:00:00.000Z",
            "date_published": "2024-04-18T14:32:56.368Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<p>spring其实已经帮我们提供了整合Junit4的依赖，我们只需要导入Junit4的依赖就行。</p>\n",
            "url": "https://heluo520.github.io/posts/ssm/spring-junit",
            "title": "如何在Spring项目中使用Junit4?",
            "date_modified": "2024-03-30T00:00:00.000Z",
            "date_published": "2024-04-18T14:32:56.368Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h1>没毛病兄弟们</h1>\n<p>内容....<br>\n<img src=\"./img/jk.jpg\" alt=\"漂亮的小姐姐\"></p>\n",
            "url": "https://heluo520.github.io/posts/ssm/test",
            "title": "测试",
            "date_modified": "2024-03-30T00:00:00.000Z",
            "date_published": "2024-04-18T14:32:56.368Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>注解@ConfigurationProperties</h2>\n<ul>\n<li>\n<p>简介：可用于读取yml文件中定义的元数据并生成属性对象，一般用于生成配置对象。</p>\n</li>\n<li>\n<p>用法：</p>\n<p>配置对象</p>\n<pre><code class=\"language-java\">@</code></pre>\n</li>\n</ul>\n",
            "url": "https://heluo520.github.io/posts/springboot/annotation",
            "title": "SpringBoot中的注解",
            "date_modified": "2024-04-08T00:00:00.000Z",
            "date_published": "2024-04-18T14:32:56.364Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>设置上传文件最大大小设置</h2>\n<pre><code class=\"language-yml\"># application.yml\nspring:\n  servlet:\n    multipart:\n      max-file-size: 10M</code></pre>\n",
            "url": "https://heluo520.github.io/posts/springboot/fileutils",
            "title": "web项目中的文件上传与下载",
            "date_modified": "2024-04-10T00:00:00.000Z",
            "date_published": "2024-04-18T14:32:56.364Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<h2>在linux中wordpress的安装</h2>\n<h3>步骤一：更新系统</h3>\n<p>在终端中输入并执行命令：<code>sudo apt update &amp;&amp; sudo apt upgrade</code></p>\n<h3>步骤二：安装apa</h3>\n",
            "url": "https://heluo520.github.io/posts/linux/wordpress",
            "title": "在linux下安装配置wordpress",
            "date_modified": "2024-04-10T00:00:00.000Z",
            "date_published": "2024-04-18T14:32:56.360Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<p>debug记录</p>\n",
            "url": "https://heluo520.github.io/posts/debug/bulid-bug",
            "title": "springboot在一个子模块B中引用另一个子模块C后编译B出错",
            "date_modified": "2024-04-11T00:00:00.000Z",
            "date_published": "2024-04-18T14:32:56.348Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        },
        {
            "id": "",
            "content_html": "<p>mybatis-plus是在mybatis的基础上只做增强而不做改变。所以我们可以同时使用两者，即有plus的方便性又有mybatis的灵活性。</p>\n",
            "url": "https://heluo520.github.io/posts/frame/mybatis-plus",
            "title": "springboot整合mybatis与mybatis-plus",
            "date_modified": "2024-04-12T00:00:00.000Z",
            "date_published": "2024-04-18T14:32:56.348Z",
            "author": {
                "name": "贤狼赫萝",
                "url": "https://valaxy.site"
            }
        }
    ]
}