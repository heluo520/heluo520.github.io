<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://heluo520.github.io/</id>
    <title>贤狼赫萝</title>
    <updated>2024-06-01T08:22:45.833Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <author>
        <name>贤狼赫萝</name>
        <email>i@valaxy.site</email>
        <uri>https://valaxy.site</uri>
    </author>
    <link rel="alternate" href="https://heluo520.github.io/"/>
    <link rel="self" href="https://heluo520.github.io/atom.xml"/>
    <subtitle>一只贤狼</subtitle>
    <logo>https://heluo520.github.io/kt2.jpg</logo>
    <icon>https://heluo520.github.io/favicon.svg</icon>
    <rights>CC BY-NC-SA 4.0 2024 © 贤狼赫萝</rights>
    <entry>
        <title type="html"><![CDATA[jwt的使用]]></title>
        <id>https://heluo520.github.io/posts/springboot/jwt</id>
        <link href="https://heluo520.github.io/posts/springboot/jwt"/>
        <updated>2024-04-09T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>JWT（JSON Web Token）是一种开放标准（RFC 7519），它定义了一种紧凑且自包含的方式，用于在各方之间安全地传输信息作为 JSON 对象。JWT 可以通过数字签名进行验证，这样就可以确保在传输过程中的数据不被篡改。</p>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.342Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[springboot源码学习]]></title>
        <id>https://heluo520.github.io/posts/springboot/source-code</id>
        <link href="https://heluo520.github.io/posts/springboot/source-code"/>
        <updated>2024-04-12T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>笔记</p>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.342Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[springboot+mybatis中resultMap与驼峰命名]]></title>
        <id>https://heluo520.github.io/posts/springboot/springboot-mybatis</id>
        <link href="https://heluo520.github.io/posts/springboot/springboot-mybatis"/>
        <updated>2024-04-20T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>当数据库中表的字段名与我们java实体中的属性名不同时我们就需要手动指定映射关系，或进行一些配置。</p>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.342Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[SpringBoot中通过第三方Swagger-UI来使用Swagger]]></title>
        <id>https://heluo520.github.io/posts/springboot/swagger</id>
        <link href="https://heluo520.github.io/posts/springboot/swagger"/>
        <updated>2024-04-09T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>前言：在前后端分离开发的过程中，前端和后端需要进行api对接进行交互，就需要一个api规范文档，方便前后端的交互，但api文档不能根据代码的变化发生实时动态的改变，这样后端修改了接口，前端不能及时获取最新的接口，导致调用出错，需要手动维护api文档，加大了开发的工作量和困难，而swagger的出现就是为了解决这一系列的问题。</p>
</blockquote>
<p>简单来说的话就是一个基于openAPI构建的可用于动态生成后端接口文档的工具集</p>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.342Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[SpringBoot中的Interceptor(拦截器)与Filter(过滤器)]]></title>
        <id>https://heluo520.github.io/posts/springboot/拦截器与过滤器</id>
        <link href="https://heluo520.github.io/posts/springboot/拦截器与过滤器"/>
        <updated>2024-04-05T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h2>二者对比(其实作用都差不多)</h2>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center"><strong>Interceptor</strong></th>
<th style="text-align:center"><strong>Filter</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>技术范畴</strong></td>
<td style="text-align:center">Sprin</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.342Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[RocketMQ]]></title>
        <id>https://heluo520.github.io/posts/springcloud/rocketmq</id>
        <link href="https://heluo520.github.io/posts/springcloud/rocketmq"/>
        <updated>2024-05-20T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h2>简介</h2>
<p>RocketMQ为Alibaba开发的消息队列。优点：实现应用解耦、异步提速(响应速度)、削峰填谷(囤积消息慢慢处理)。缺点：可用性降低(如何保证中间件的可靠)、复杂性提高(耦合了中间件</p>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.342Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[SpringCloud Alibab篇]]></title>
        <id>https://heluo520.github.io/posts/springcloud/springcloud-alibab</id>
        <link href="https://heluo520.github.io/posts/springcloud/springcloud-alibab"/>
        <updated>2024-05-17T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h2>CAP概念</h2>
<p>C: 一致性 、A：可用性 、P：分区容错性</p>
<h2>Nacos与启动</h2>
<p>Nacos：Eureka + Config + Bus 包含了注册中心、配置中心、动态刷新配置的功能，即是一个</p>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.342Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[SpringCloud Eureka篇]]></title>
        <id>https://heluo520.github.io/posts/springcloud/springcloud-eureka</id>
        <link href="https://heluo520.github.io/posts/springcloud/springcloud-eureka"/>
        <updated>2024-05-15T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h2>架构</h2>
<ul>
<li>单体架构</li>
<li>垂直架构</li>
<li>分布式架构</li>
<li>SOA架构</li>
<li>微服务架构</li>
</ul>
<h2>注册中心</h2>
<p>用于服务注册与服务发现。</p>
<ul>
<li>实现：
<ol>
<li>Eureka (Netflix)<br>
2</li>
</ol>
</li>
</ul>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.342Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Spring中的AOP]]></title>
        <id>https://heluo520.github.io/posts/ssm/index</id>
        <link href="https://heluo520.github.io/posts/ssm/index"/>
        <updated>2024-03-30T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>使用前提：Spring的AOP是基于JDK动态代理和CGlib代理实现的，所以目标对象必须要有父类或实现了接口才能被代理。</p>
</blockquote>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.342Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何在Spring项目中使用Junit4?]]></title>
        <id>https://heluo520.github.io/posts/ssm/spring-junit</id>
        <link href="https://heluo520.github.io/posts/ssm/spring-junit"/>
        <updated>2024-03-30T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>spring其实已经帮我们提供了整合Junit4的依赖，我们只需要导入Junit4的依赖就行。</p>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.342Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[测试]]></title>
        <id>https://heluo520.github.io/posts/ssm/test</id>
        <link href="https://heluo520.github.io/posts/ssm/test"/>
        <updated>2024-03-30T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h1>没毛病兄弟们</h1>
<p>内容....<br>
<img src="./img/jk.jpg" alt="漂亮的小姐姐"></p>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.342Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[SpringBoot中的注解]]></title>
        <id>https://heluo520.github.io/posts/springboot/annotation</id>
        <link href="https://heluo520.github.io/posts/springboot/annotation"/>
        <updated>2024-04-08T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h2>注解@ConfigurationProperties</h2>
<ul>
<li>
<p>简介：可用于读取yml文件中定义的元数据并生成属性对象，一般用于生成配置对象。</p>
</li>
<li>
<p>用法：</p>
<p>配置对象</p>
<pre><code class="language-java">@</code></pre>
</li>
</ul>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.338Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[web项目中的文件上传与下载]]></title>
        <id>https://heluo520.github.io/posts/springboot/fileutils</id>
        <link href="https://heluo520.github.io/posts/springboot/fileutils"/>
        <updated>2024-04-10T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h2>设置上传文件最大大小设置</h2>
<pre><code class="language-yml"># application.yml
spring:
  servlet:
    multipart:
      max-file-size: 10M</code></pre>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.338Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[linux指令学习]]></title>
        <id>https://heluo520.github.io/posts/linux/linux</id>
        <link href="https://heluo520.github.io/posts/linux/linux"/>
        <updated>2024-05-26T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h2>前言</h2>
<p>基于Ubuntu的linux发行版</p>
<h2>组成</h2>
<ul>
<li>内核</li>
<li>shell(用户与内核交互的接口)</li>
<li>文件系统</li>
</ul>
<h2>vim</h2>
<table>
<thead>
<tr>
<th style="text-align:center">命令</th>
<th style="text-align:center">作用</th>
</tr>
</thead>
</table>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.334Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[在linux下安装配置wordpress]]></title>
        <id>https://heluo520.github.io/posts/linux/wordpress</id>
        <link href="https://heluo520.github.io/posts/linux/wordpress"/>
        <updated>2024-04-10T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h2>在linux中wordpress的安装</h2>
<h3>步骤一：更新系统</h3>
<p>在终端中输入并执行命令：<code>sudo apt update &amp;&amp; sudo apt upgrade</code></p>
<h3>步骤二：安装apa</h3>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.334Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[常用算法]]></title>
        <id>https://heluo520.github.io/posts/notes/algorithm</id>
        <link href="https://heluo520.github.io/posts/notes/algorithm"/>
        <updated>2024-05-12T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h2>目录</h2>
<ul>
<li><a href="#%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95">排序算法</a>
<ol>
<li><a href="#%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F">快速排序</a></li>
<li><a href="#%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F">归并排序</a></li>
<li><a href="#%E5%A0%86%E6%8E%92%E5%BA%8F">堆排序</a></li>
</ol>
</li>
</ul>
<h2>排序算法</h2>
<h4>快速</h4>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.334Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[C++]]></title>
        <id>https://heluo520.github.io/posts/notes/c-plus</id>
        <link href="https://heluo520.github.io/posts/notes/c-plus"/>
        <updated>2024-05-08T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h2>目录</h2>
<ul>
<li><a href="#%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86">基础部分</a>
<ul>
<li><a href="#oop">面向对象(OOP)的特性</a></li>
<li><a href="#%E8%99%9A%E5%87%BD%E6%95%B0%E4%B8%8E%E8%99%9A%E6%8C%87%E9%92%88">虚函数与虚指针</a></li>
<li><a href="#%E7%BA%AF%E8%99%9A%E5%87%BD%E6%95%B0">纯虚函数</a></li>
<li></li>
</ul>
</li>
</ul>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.334Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[设计模式]]></title>
        <id>https://heluo520.github.io/posts/notes/design-pattern</id>
        <link href="https://heluo520.github.io/posts/notes/design-pattern"/>
        <updated>2024-05-09T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li></li>
</ul>
<h2>什么是设计模式？</h2>
<p>设计模式是软件设计中常见问题的典型解决方案。(感觉都是为了使得设计的程序可扩展性好，不易出错，灵活高效)</p>
<h1>根据意图/目的来分类</h1>
<h2>创建型模式</h2>
<p>提供创建对象的机制</p>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.334Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[IDEA快捷键]]></title>
        <id>https://heluo520.github.io/posts/notes/idea</id>
        <link href="https://heluo520.github.io/posts/notes/idea"/>
        <updated>2024-05-20T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h2>快捷键</h2>
<table>
<thead>
<tr>
<th style="text-align:center">快捷键</th>
<th style="text-align:center">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">ctrl+alt+t</td>
<td style="text-align:center">将选中的代码放入一个语句块中</td>
</tr>
<tr>
<td style="text-align:center">ctrl+alt+m</td>
<td style="text-align:center">将选中的代码提取为一个方法</td>
</tr>
</tbody>
</table>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.334Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[MySQL学习笔记]]></title>
        <id>https://heluo520.github.io/posts/db/mysql</id>
        <link href="https://heluo520.github.io/posts/db/mysql"/>
        <updated>2024-05-26T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h2>NULL值的处理</h2>
<ul>
<li>使用函数<code>COALESCE(arg1,arg2,agr3,...)</code>。其接收多个参数，返回其中不为 null 的值，全为 null则返回 null。</li>
<li>使用`IFNUL</li>
</ul>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.318Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[Redis学习笔记]]></title>
        <id>https://heluo520.github.io/posts/db/redis</id>
        <link href="https://heluo520.github.io/posts/db/redis"/>
        <updated>2024-05-26T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h2>Redis启动(Windows下)</h2>
<p>在 Redis 的安装目录下进入终端，输入<code>redis-server.exe redis.windows.conf</code>启动 Redis 服务端，另起一个终端进</p>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.318Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[springboot在一个子模块B中引用另一个子模块C后编译B出错]]></title>
        <id>https://heluo520.github.io/posts/debug/bulid-bug</id>
        <link href="https://heluo520.github.io/posts/debug/bulid-bug"/>
        <updated>2024-04-11T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>debug记录</p>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.318Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用@Slf4j打印对象出现java.lang.StackOverflowError]]></title>
        <id>https://heluo520.github.io/posts/debug/slfj</id>
        <link href="https://heluo520.github.io/posts/debug/slfj"/>
        <updated>2024-04-21T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>使用@Slf4j打印对象时出现<code>java.lang.ClassNotFoundException: org.springframework.core.log.LogDelegateFactory</code>异常</p>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.318Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[springboot整合mybatis与mybatis-plus]]></title>
        <id>https://heluo520.github.io/posts/frame/mybatis-plus</id>
        <link href="https://heluo520.github.io/posts/frame/mybatis-plus"/>
        <updated>2024-04-12T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>mybatis-plus是在mybatis的基础上只做增强而不做改变。所以我们可以同时使用两者，即有plus的方便性又有mybatis的灵活性。</p>
]]></content>
        <author>
            <name>贤狼赫萝</name>
            <email>i@valaxy.site</email>
            <uri>https://valaxy.site</uri>
        </author>
        <published>2024-06-01T08:21:13.318Z</published>
    </entry>
</feed>